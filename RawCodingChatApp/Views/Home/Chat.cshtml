@model Chat

<div class="chat-body">
    @foreach (var msg in Model.Messages)
    {
        <div class="message">
            <header>@msg.Name:</header>
            <p>@msg.Text</p>
            <footer>@msg.TimeStamp</footer>
        </div>
    }
</div>

        <form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Home" asp-action="CreateMessage">
            <input type="hidden" name="roomId" value="@Model.Id" />
            <input type="text" name="message" id="message-input">
            <button type="submit">Send</button>
        </form>

@section scripts{
    <script src="~/js/aspnet-signalr/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        var _connectionId = '';

        var messageBuilder = function () {
            var message = null;
            var header = null;
            var p = null;
            var footer = null;

            return {
                createMessage: function (classList) {
                    message = document.createElement("div")
                    if (classList === undefined) 
                        classList = [];
                    
                    for (var i = 0; i < classList.length; i++) {
                        message.classList.Add(classList[i])
                    }

                    message.classList.add('message')
                    return this;
                },
                withHeader: function (text) {
                    header = document.createElement("header")
                    header.appendChild(document.createTextNode(text))
                    return this;
                },
                withParagraph: function (text) {
                    p = document.createElement("p")
                    p.appendChild(document.createTextNode(text))
                    return this;
                },
                withFooter: function (text) {
                    footer = document.createElement("footer")
                    footer.appendChild(document.createTextNode(text))
                    return this;
                },
                build: function () {
                    message.appendChild(header);
                    message.appendChild(p);
                    message.appendChild(footer);
                    return message;
                }
            }
        }

        connection.on("ReceiveMessage", function (data) {
            console.log(data);
            var message = messageBuilder()
                .createMessage()
                .withHeader(data.name)
                .withParagraph(data.text)
                .withFooter(data.timeStamp)
                .build();

            document.querySelector('.chat-body').append(message);
        })


        connection.start()
            .then(function () {
                connection.invoke('getConnectionId')
                    .then(function (connectionId) {
                        _connectionId = connectionId
                        joinRoom();
                    })
            })
            .catch(function (error) {
                console.log(error)
            })
 
        var joinRoom = function () {
            var url = 'https://localhost:44329/Chat/JoinRoom/'+ _connectionId +'/@Model.Id'

                axios.post(url, null)
                    .then(res => {

                        console.log("Room Joined!");
                    })
                    .catch(err => {
                        console.log("Failed to join room!");
                    })
        }

        var sendMessage = function (event) {
            event.preventDefault();
            var data = new FormData(event.target);
            document.getElementById('message-input').value = '';
            axios.post('/Chat/SendMessage', data)
                .then(res => {
                    console.log("Message Sent!", res)
                })
                .catch(err => {
                    console.log("Failed to send message!", err)
                })
        }

    </script>
 }
